<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentValidation.DependencyInjectionExtensions</name>
    </assembly>
    <members>
        <member name="T:FluentValidation.DependencyInjectionExtensions">
            <summary>
            Extension methods for working with a Service Provider.
            </summary>
        </member>
        <member name="M:FluentValidation.DependencyInjectionExtensions.GetServiceProvider(FluentValidation.IValidationContext)">
            <summary>
            Gets the service provider associated with the validation context.
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:FluentValidation.DependencyInjectionExtensions.SetServiceProvider(FluentValidation.ValidationContext,System.IServiceProvider)">
            <summary>
            Sets the service provider associated with the validation context.
            </summary>
            <param name="context"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:FluentValidation.DependencyInjectionExtensions.InjectValidator``2(FluentValidation.IRuleBuilder{``0,``1},System.String[])">
            <summary>
            Uses the Service Provider to inject the default validator for the property type.
            </summary>
            <param name="ruleBuilder"></param>
            <param name="ruleSets"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:FluentValidation.DependencyInjectionExtensions.InjectValidator``2(FluentValidation.IRuleBuilder{``0,``1},System.Func{System.IServiceProvider,FluentValidation.ValidationContext{``0},FluentValidation.IValidator{``1}},System.String[])">
            <summary>
            Uses the Service Provider to inject the default validator for the property type.
            </summary>
            <param name="ruleBuilder"></param>
            <param name="callback"></param>
            <param name="ruleSets"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:FluentValidation.ServiceCollectionExtensions.AddValidatorsFromAssemblies(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds all validators in specified assemblies
            </summary>
            <param name="services">The collection of services</param>
            <param name="assembly">The assemblies to scan</param>
            <param name="lifetime">The lifetime of the validators. The default is transient</param>
            <returns></returns>
        </member>
        <member name="M:FluentValidation.ServiceCollectionExtensions.AddValidatorsFromAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds all validators in specified assembly
            </summary>
            <param name="services">The collection of services</param>
            <param name="assembly">The assembly to scan</param>
            <param name="lifetime">The lifetime of the validators. The default is transient</param>
            <returns></returns>
        </member>
        <member name="M:FluentValidation.ServiceCollectionExtensions.AddValidatorsFromAssemblyContaining(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds all validators in the assembly of the specified type
            </summary>
            <param name="services">The collection of services</param>
            <param name="type">The type whose assembly to scan</param>
            <param name="lifetime">The lifetime of the validators. The default is transient</param>
            <returns></returns>
        </member>
        <member name="M:FluentValidation.ServiceCollectionExtensions.AddValidatorsFromAssemblyContaining``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds all validators in the assembly of the type specified by the generic parameter
            </summary>
            <param name="services">The collection of services</param>
            <param name="lifetime">The lifetime of the validators. The default is transient</param>
            <returns></returns>
        </member>
        <member name="M:FluentValidation.ServiceCollectionExtensions.AddScanResult(Microsoft.Extensions.DependencyInjection.IServiceCollection,FluentValidation.AssemblyScanner.AssemblyScanResult,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Helper method to register a validator from an AssemblyScanner result
            </summary>
            <param name="services">The collection of services</param>
            <param name="scanResult">The scan result</param>
            <param name="lifetime">The lifetime of the validators. The default is transient</param>
            <returns></returns>
        </member>
    </members>
</doc>
